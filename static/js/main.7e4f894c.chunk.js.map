{"version":3,"sources":["components/Node.tsx","App.tsx","index.tsx"],"names":["Text","Typography","Title","colors","StyledNode","styled","div","radius","selected","colorIdx","Node","id","value","position","onDrag","onClick","onContextMenu","onDoubleClick","toString","defaultNodes","x","y","defaultLinks","from","to","weight","App","useState","nodes","setNodes","links","setLinks","undefined","setSelected","menuCoords","setMenuCoords","linking","setLinking","useEffect","document","addEventListener","e","target","body","preventDefault","clientX","clientY","contextMenu","prevNodes","newId","reduce","prevId","style","top","left","boxShadow","Item","graph","reset","visited","Set","forEach","link","add","filter","n","has","ranks","rank","node","toFixed","nodesComponent","map","idx","length","data","newNodes","findIndex","prevLinks","newLinks","notification","success","message","splice","handleRightClick","removeNode","key","linksComponent","startNode","find","endNode","x1","y1","x2","y2","mag","Math","sqrt","pow","offsetX","offsetY","xmlns","viewBox","window","innerWidth","innerHeight","zIndex","markerWidth","markerHeight","refX","refY","orient","points","stroke","strokeWidth","markerEnd","prevState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7e4f894c.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\nimport { Typography } from 'antd';\n\nconst { Text, Title } = Typography;\n\ntype NodeProps = {\n  id: number;\n  value: string;\n  colorIdx: number;\n  position: { x: number; y: number };\n  radius: number;\n  onDrag: DraggableEventHandler;\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onContextMenu?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  selected: boolean;\n  onDoubleClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n};\n\nexport const colors = [\n  '#DB3737',\n  '#BD5A14',\n  '#F6CA2E',\n  '#27863C',\n  '#2A8093',\n  '#1E67DC',\n  '#C726C9',\n  '#944EE9'\n];\n\nconst StyledNode = styled.div<{\n  colorIdx: number;\n  radius: number;\n  selected: boolean;\n}>`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  height: ${({ radius }) => radius * 2}px;\n  width: ${({ radius }) => radius * 2}px;\n  border: ${({ selected }) => (selected ? '5px solid #FFD700' : null)};\n  border-radius: 50%;\n  background-color: ${({ colorIdx }) => colors[colorIdx]};\n  justify-content: center;\n  align-items: center;\n  cursor: default;\n`;\n\nexport const Node = ({\n  id,\n  value,\n  colorIdx,\n  position,\n  radius,\n  onDrag,\n  onClick,\n  onContextMenu,\n  selected,\n  onDoubleClick\n}: NodeProps) => {\n  return (\n    <Draggable position={position} onDrag={onDrag}>\n      <StyledNode\n        colorIdx={colorIdx}\n        id={id.toString()}\n        radius={radius}\n        onClick={onClick}\n        onContextMenu={onContextMenu}\n        onDoubleClick={onDoubleClick}\n        selected={selected}\n      >\n        <div>\n          <Text>{value}</Text>\n        </div>\n        <div>\n          <Title>{id}</Title>\n        </div>\n      </StyledNode>\n    </Draggable>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Node, colors } from './components';\nimport { notification, Menu, Button } from 'antd';\nimport graph from 'pagerank.js';\n\nconst RADIUS = 50;\n\ntype Node = {\n  position: { x: number; y: number };\n  id: number;\n};\n\ntype Link = {\n  from: number;\n  to: number;\n  weight: number;\n};\n\nconst defaultNodes: Node[] = [\n  { position: { x: 50, y: 50 }, id: 0 },\n  { position: { x: 300, y: 300 }, id: 1 },\n  { position: { x: 360, y: 80 }, id: 2 },\n  { position: { x: 70, y: 350 }, id: 3 },\n  { position: { x: 600, y: 300 }, id: 4 },\n  { position: { x: 370, y: 600 }, id: 5 }\n];\n\nconst defaultLinks: Link[] = [\n  { from: 0, to: 1, weight: 1 },\n  { from: 1, to: 2, weight: 1 },\n  { from: 1, to: 3, weight: 2 },\n  { from: 1, to: 4, weight: 1 },\n  { from: 1, to: 5, weight: 1 },\n  { from: 2, to: 0, weight: 1 },\n  { from: 2, to: 4, weight: 1 },\n  { from: 3, to: 0, weight: 1 },\n  { from: 3, to: 5, weight: 1 },\n  { from: 5, to: 2, weight: 1 }\n];\n\nconst App = () => {\n  const [nodes, setNodes] = useState<Node[]>(defaultNodes);\n\n  const [links, setLinks] = useState<Link[]>(defaultLinks);\n\n  const [selected, setSelected] = useState<number | undefined>(undefined);\n\n  const [menuCoords, setMenuCoords] = useState<\n    { x: number; y: number } | undefined\n  >(undefined);\n\n  const [linking, setLinking] = useState<boolean>(true);\n\n  useEffect(() => {\n    document.addEventListener('mousedown', (e: Event) => {\n      if (e.target === document.body) {\n        setSelected(undefined);\n        setMenuCoords(undefined);\n      }\n    });\n    document.addEventListener('contextmenu', (e: MouseEvent) => {\n      e.preventDefault();\n      if (e.target === document.body)\n        setMenuCoords({ x: e.clientX, y: e.clientY });\n    });\n  }, []);\n\n  const addNode = () => {\n    setNodes((prevNodes) => {\n      const newId =\n        prevNodes.reduce((prevId, { id }) => (id > prevId ? id : prevId), 0) +\n        1;\n      return [\n        ...prevNodes,\n        {\n          position: { x: menuCoords!.x, y: menuCoords!.y },\n          id: newId\n        }\n      ];\n    });\n    setMenuCoords(undefined);\n  };\n\n  const removeNode = (id: number) => {\n    setNodes((prevNodes) =>\n      prevNodes.filter(({ id: nodeId }) => nodeId !== id)\n    );\n    setLinks((prevLinks) =>\n      prevLinks.filter(({ to, from }) => to !== id && from !== id)\n    );\n  };\n\n  const contextMenu = (\n    <Menu\n      onClick={addNode}\n      style={{\n        position: 'absolute',\n        top: (menuCoords && menuCoords.y) || 0,\n        left: (menuCoords && menuCoords.x) || 0,\n        boxShadow: '0 10px 15px 0 rgba(0,0,0,0.2)'\n      }}\n    >\n      <Menu.Item>Add Node</Menu.Item>\n    </Menu>\n  );\n\n  const handleRightClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    id: number\n  ) => {\n    e.preventDefault();\n    if (selected !== undefined) {\n      if (selected !== id) {\n        const idx = links.findIndex(\n          ({ from, to }) => from === selected && to === id\n        );\n        if (linking) {\n          if (idx !== -1) {\n            const weight = links[idx].weight + 1;\n            setLinks((prevLinks) => {\n              const newLinks = [...prevLinks];\n              newLinks[idx] = { from: selected, to: id, weight: weight };\n              return newLinks;\n            });\n            notification.success({\n              message: `Increased the weight of link to ${weight}`\n            });\n          } else {\n            setLinks((prevLinks) => [\n              ...prevLinks,\n              { from: selected, to: id, weight: 1 }\n            ]);\n            notification.success({ message: 'Linked successfully' });\n          }\n        } else {\n          if (idx !== -1) {\n            setLinks((prevLinks) => {\n              const newLinks = [...prevLinks];\n              newLinks.splice(idx, 1);\n              return newLinks;\n            });\n            notification.success({ message: 'Linked removed successfully' });\n          }\n        }\n      }\n      setSelected(undefined);\n    } else setSelected(id);\n  };\n\n  graph.reset();\n\n  const visited = new Set();\n  links.forEach(({ from, to }) => {\n    graph.link(from, to);\n\n    visited.add(from);\n    visited.add(to);\n  });\n\n  const leftover = nodes.filter((n) => !visited.has(n));\n  leftover.forEach(({ id }) => graph.link(id, id));\n\n  const ranks: string[] = [];\n  graph.rank(0.81, 0.000001, (node: number, rank: number) => {\n    ranks[node] = rank.toFixed(3);\n  });\n\n  const nodesComponent = nodes.map(({ position, id }, idx) => (\n    <Node\n      value={ranks[id] || '0.000'}\n      id={id}\n      colorIdx={id % colors.length}\n      position={position}\n      radius={RADIUS}\n      onDrag={(e, data) => {\n        const { x, y } = data;\n        const newNodes = [...nodes];\n        const idx = newNodes.findIndex(({ id: nodeId }) => nodeId === id);\n        newNodes[idx] = { ...newNodes[idx], position: { x, y } };\n        setNodes(newNodes);\n      }}\n      onContextMenu={(e) => {\n        handleRightClick(e, id);\n      }}\n      selected={selected === id}\n      onDoubleClick={() => {\n        removeNode(id);\n      }}\n      key={id}\n    />\n  ));\n\n  const linksComponent = links.map(({ from, to, weight }, idx) => {\n    const startNode = nodes.find(({ id }) => id === from);\n    const endNode = nodes.find(({ id }) => id === to);\n\n    if (!startNode || !endNode) return <></>;\n\n    const {\n      position: { x: x1, y: y1 }\n    } = startNode;\n    const {\n      position: { x: x2, y: y2 }\n    } = endNode;\n\n    const mag = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    const offsetX = ((RADIUS + 10 * weight) * (x2 - x1)) / mag;\n    const offsetY = ((RADIUS + 10 * weight) * (y2 - y1)) / mag;\n\n    return (\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox={`0 0 ${window.innerWidth} ${window.innerHeight}`}\n        style={{ position: 'absolute', top: 0, zIndex: -1 }}\n        key={idx}\n      >\n        <defs>\n          <marker\n            id='arrowhead'\n            markerWidth='10'\n            markerHeight='7'\n            refX='0'\n            refY='3.5'\n            orient='auto'\n          >\n            <polygon points='0 0, 10 3.5, 0 7' />\n          </marker>\n        </defs>\n        <line\n          x1={x1 + RADIUS}\n          y1={y1 + RADIUS}\n          x2={x2 + RADIUS - offsetX}\n          y2={y2 + RADIUS - offsetY}\n          stroke='#000'\n          strokeWidth={weight}\n          markerEnd='url(#arrowhead)'\n        />\n      </svg>\n    );\n  });\n\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          setLinking((prevState) => !prevState);\n        }}\n        style={{ position: 'absolute' }}\n      >\n        {linking ? 'Linking' : 'Unlinking'}\n      </Button>\n      {nodesComponent}\n      {linksComponent}\n      {menuCoords ? contextMenu : null}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}