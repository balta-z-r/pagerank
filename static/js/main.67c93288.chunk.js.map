{"version":3,"sources":["components/Node.tsx","App.tsx","index.tsx"],"names":["Text","Typography","Title","colors","StyledNode","styled","div","radius","selected","colorIdx","drag","Node","id","value","position","onDrag","onClick","onContextMenu","onDoubleClick","useState","setDrag","onStart","onStop","toString","xMax","window","innerWidth","RADIUS","yMax","innerHeight","defaultNodes","x","Math","min","y","defaultLinks","from","to","weight","App","nodes","setNodes","links","setLinks","undefined","setSelected","menuCoords","setMenuCoords","linking","setLinking","useEffect","document","addEventListener","e","target","body","preventDefault","clientX","clientY","contextMenu","prevNodes","newId","reduce","prevId","style","top","left","boxShadow","Item","graph","reset","visited","Set","forEach","i","link","add","filter","has","ranks","rank","node","toFixed","nodesComponent","map","idx","length","data","max","newNodes","findIndex","prevLinks","newLinks","notification","success","message","splice","handleRightClick","removeNode","key","linksComponent","startNode","find","endNode","x1","y1","x2","y2","mag","sqrt","pow","offsetX","offsetY","xmlns","viewBox","zIndex","markerWidth","markerHeight","refX","refY","orient","points","stroke","strokeWidth","markerEnd","prevState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.67c93288.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\nimport { Typography } from 'antd';\n\nconst { Text, Title } = Typography;\n\ntype NodeProps = {\n  id: number;\n  value: string;\n  colorIdx: number;\n  position: { x: number; y: number };\n  radius: number;\n  onDrag: DraggableEventHandler;\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onContextMenu?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  selected: boolean;\n  onDoubleClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n};\n\nexport const colors = [\n  '#DB3737',\n  '#BD5A14',\n  '#F6CA2E',\n  '#27863C',\n  '#2A8093',\n  '#1E67DC',\n  '#C726C9',\n  '#944EE9'\n];\n\nconst StyledNode = styled.div<{\n  colorIdx: number;\n  radius: number;\n  selected: boolean;\n  drag: boolean\n}>`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  height: ${({ radius }) => radius * 2}px;\n  width: ${({ radius }) => radius * 2}px;\n  border: ${({ selected }) => (selected ? '5px solid #FFD700' : null)};\n  border-radius: 50%;\n  background-color: ${({ colorIdx }) => colors[colorIdx]};\n  justify-content: center;\n  align-items: center;\n  cursor: ${({ drag }) => drag ? `url('https://www.google.com/intl/en_ALL/mapfiles/closedhand.cur'), all-scroll` : `url('https://www.google.com/intl/en_ALL/mapfiles/openhand.cur'), all-scroll`};\n`;\n\nexport const Node = ({\n  id,\n  value,\n  colorIdx,\n  position,\n  radius,\n  onDrag,\n  onClick,\n  onContextMenu,\n  selected,\n  onDoubleClick\n}: NodeProps) => {\n  const [drag, setDrag] = useState<boolean>(false)\n\n  return (\n    <Draggable position={position} onDrag={onDrag} onStart={()=>{setDrag(true)}} onStop={()=>{setDrag(false)}}>\n      <StyledNode\n        colorIdx={colorIdx}\n        id={id.toString()}\n        radius={radius}\n        onClick={onClick}\n        onContextMenu={onContextMenu}\n        onDoubleClick={onDoubleClick}\n        selected={selected}\n        drag={drag}\n      >\n        <div>\n          <Text>{value}</Text>\n        </div>\n        <div>\n          <Title>{id}</Title>\n        </div>\n      </StyledNode>\n    </Draggable>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Node, colors } from './components';\nimport { notification, Menu, Button } from 'antd';\nimport graph from 'pagerank.js';\n\nconst RADIUS = 50;\n\nconst xMin = 0\nconst yMin = 0\nconst xMax = window.innerWidth - RADIUS * 3\nconst yMax = window.innerHeight - RADIUS * 3\n\ntype Node = {\n  position: { x: number; y: number };\n  id: number;\n};\n\ntype Link = {\n  from: number;\n  to: number;\n  weight: number;\n};\n\nconst defaultNodes: Node[] = [\n  { position: { x: Math.min(50, xMax), y: Math.min(50, yMax) }, id: 0 },\n  { position: { x: Math.min(300, xMax), y: Math.min(250, yMax) }, id: 1 },\n  { position: { x: Math.min(360, xMax), y: Math.min(80, yMax) }, id: 2 },\n  { position: { x: Math.min(70, xMax), y: Math.min(300, yMax) }, id: 3 },\n  { position: { x: Math.min(600, xMax), y: Math.min(250, yMax) }, id: 4 },\n  { position: { x: Math.min(370, xMax), y: Math.min(500, yMax) }, id: 5 }\n];\n\nconst defaultLinks: Link[] = [\n  { from: 0, to: 1, weight: 1 },\n  { from: 1, to: 2, weight: 1 },\n  { from: 1, to: 3, weight: 2 },\n  { from: 1, to: 4, weight: 1 },\n  { from: 1, to: 5, weight: 1 },\n  { from: 2, to: 0, weight: 1 },\n  { from: 2, to: 4, weight: 1 },\n  { from: 3, to: 0, weight: 1 },\n  { from: 3, to: 5, weight: 1 },\n  { from: 5, to: 2, weight: 1 }\n];\n\nconst App = () => {\n  const [nodes, setNodes] = useState<Node[]>(defaultNodes);\n\n  const [links, setLinks] = useState<Link[]>(defaultLinks);\n\n  const [selected, setSelected] = useState<number | undefined>(undefined);\n\n  const [menuCoords, setMenuCoords] = useState<\n    { x: number; y: number } | undefined\n  >(undefined);\n\n  const [linking, setLinking] = useState<boolean>(true);\n\n  useEffect(() => {\n    document.addEventListener('mousedown', (e: Event) => {\n      if (e.target === document.body) {\n        setSelected(undefined);\n        setMenuCoords(undefined);\n      }\n    });\n    document.addEventListener('contextmenu', (e: MouseEvent) => {\n      e.preventDefault();\n      if (e.target === document.body)\n        setMenuCoords({ x: e.clientX, y: e.clientY });\n    });\n  }, []);\n\n  const addNode = () => {\n    setNodes((prevNodes) => {\n      const newId =\n        prevNodes.reduce((prevId, { id }) => (id > prevId ? id : prevId), 0) +\n        1;\n      return [\n        ...prevNodes,\n        {\n          position: { x: menuCoords!.x, y: menuCoords!.y },\n          id: newId\n        }\n      ];\n    });\n    setMenuCoords(undefined);\n  };\n\n  const removeNode = (id: number) => {\n    setNodes((prevNodes) =>\n      prevNodes.filter(({ id: nodeId }) => nodeId !== id)\n    );\n    setLinks((prevLinks) =>\n      prevLinks.filter(({ to, from }) => to !== id && from !== id)\n    );\n  };\n\n  const contextMenu = (\n    <Menu\n      onClick={addNode}\n      style={{\n        position: 'absolute',\n        top: (menuCoords && menuCoords.y) || 0,\n        left: (menuCoords && menuCoords.x) || 0,\n        boxShadow: '0 10px 15px 0 rgba(0,0,0,0.2)'\n      }}\n    >\n      <Menu.Item>Add Node</Menu.Item>\n    </Menu>\n  );\n\n  const handleRightClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    id: number\n  ) => {\n    e.preventDefault();\n    if (selected !== undefined) {\n      if (selected !== id) {\n        const idx = links.findIndex(\n          ({ from, to }) => from === selected && to === id\n        );\n        if (linking) {\n          if (idx !== -1) {\n            const weight = links[idx].weight + 1;\n            setLinks((prevLinks) => {\n              const newLinks = [...prevLinks];\n              newLinks[idx] = { from: selected, to: id, weight: weight };\n              return newLinks;\n            });\n            notification.success({\n              message: `Increased the weight of link to ${weight}`\n            });\n          } else {\n            setLinks((prevLinks) => [\n              ...prevLinks,\n              { from: selected, to: id, weight: 1 }\n            ]);\n            notification.success({ message: 'Linked successfully' });\n          }\n        } else {\n          if (idx !== -1) {\n            setLinks((prevLinks) => {\n              const newLinks = [...prevLinks];\n              newLinks.splice(idx, 1);\n              return newLinks;\n            });\n            notification.success({ message: 'Linked removed successfully' });\n          }\n        }\n      }\n      setSelected(undefined);\n    } else setSelected(id);\n  };\n\n  graph.reset();\n\n  const visited = new Set();\n  links.forEach(({ from, to, weight }) => {\n    for (let i = 0; i < weight; i++) graph.link(from, to);\n\n    visited.add(from);\n    visited.add(to);\n  });\n\n  const leftover = nodes.filter(({ id }) => !visited.has(id));\n  leftover.forEach(({ id }) => graph.link(id, id));\n\n  const ranks: string[] = [];\n  graph.rank(0.81, 0.000001, (node: number, rank: number) => {\n    ranks[node] = rank.toFixed(3);\n  });\n\n  const nodesComponent = nodes.map(({ position, id }, idx) =>\n    (\n      <Node\n        value={ranks[id] || '0.000'}\n        id={id}\n        colorIdx={id % colors.length}\n        position={position}\n        radius={RADIUS}\n        onDrag={(e, data) => {\n          let { x, y } = data;\n          x = Math.min(x, xMax)\n          x = Math.max(x, xMin)\n          y = Math.min(y, yMax)\n          y = Math.max(y, yMin)\n          const newNodes = [...nodes];\n          const idx = newNodes.findIndex(({ id: nodeId }) => nodeId === id);\n          newNodes[idx] = { ...newNodes[idx], position: { x, y } };\n          setNodes(newNodes);\n        }}\n        onContextMenu={(e) => {\n          handleRightClick(e, id);\n        }}\n        selected={selected === id}\n        onDoubleClick={() => {\n          removeNode(id);\n        }}\n        key={id}\n      />\n    ));\n\n  const linksComponent = links.map(({ from, to, weight }, idx) => {\n    const startNode = nodes.find(({ id }) => id === from);\n    const endNode = nodes.find(({ id }) => id === to);\n\n    if (!startNode || !endNode) return <></>;\n\n    const {\n      position: { x: x1, y: y1 }\n    } = startNode;\n    const {\n      position: { x: x2, y: y2 }\n    } = endNode;\n\n    const mag = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    const offsetX = ((RADIUS + 10 * weight) * (x2 - x1)) / mag;\n    const offsetY = ((RADIUS + 10 * weight) * (y2 - y1)) / mag;\n\n    return (\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox={`0 0 ${window.innerWidth} ${window.innerHeight}`}\n        style={{ position: 'absolute', top: 0, zIndex: -1 }}\n        key={idx}\n      >\n        <defs>\n          <marker\n            id='arrowhead'\n            markerWidth='10'\n            markerHeight='7'\n            refX='0'\n            refY='3.5'\n            orient='auto'\n          >\n            <polygon points='0 0, 10 3.5, 0 7' />\n          </marker>\n        </defs>\n        <line\n          x1={x1 + RADIUS}\n          y1={y1 + RADIUS}\n          x2={x2 + RADIUS - offsetX}\n          y2={y2 + RADIUS - offsetY}\n          stroke='#000'\n          strokeWidth={weight}\n          markerEnd='url(#arrowhead)'\n        />\n      </svg>\n    );\n  });\n\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          setLinking((prevState) => !prevState);\n        }}\n        style={{ position: 'absolute' }}\n      >\n        {linking ? 'Linking' : 'Unlinking'}\n      </Button>\n      {nodesComponent}\n      {linksComponent}\n      {menuCoords ? contextMenu : null}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}